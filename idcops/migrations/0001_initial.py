# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2025-08-21 05:30
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('mobile', models.CharField(blank=True, max_length=16, verbose_name='手机号码')),
                ('avatar', models.ImageField(default='avatar/default.png', upload_to='avatar/%Y/%m/%d', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '员工信息',
                'verbose_name_plural': '员工信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='请使用客户全称或跟其他系统保持一致', max_length=64, verbose_name='客户名称')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_client_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_comment_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_comment_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '备注信息',
                'verbose_name_plural': '备注信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Configure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_configure_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_configure_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '系统备注',
                'verbose_name_plural': '系统备注',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(help_text='默认最新一个可用编号', max_length=32, unique=True, verbose_name='设备编号')),
                ('sn', models.SlugField(help_text='比如: FOC1447001', max_length=64, verbose_name='设备SN号')),
                ('ipaddr', models.CharField(blank=True, default='0.0.0.0', help_text='比如: 192.168.0.21/10.0.0.21', max_length=128, verbose_name='IP地址')),
                ('model', models.CharField(help_text='比如: Dell R720xd', max_length=32, verbose_name='设备型号')),
                ('status', models.SlugField(choices=[('online', '在线'), ('offline', '已下线'), ('moved', '已迁移')], default='online', help_text='默认为在线', verbose_name='状态')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '设备中心',
                'verbose_name_plural': '设备中心',
                'ordering': ['-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('title', models.CharField(max_length=128, verbose_name='文档标题')),
                ('body', models.TextField(verbose_name='文档内容')),
            ],
            options={
                'verbose_name': '文档资料',
                'verbose_name_plural': '文档资料',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='部门简称,尽量简洁', max_length=16, unique=True, verbose_name='部门简称')),
                ('desc', models.CharField(help_text='请填写公司定义的部门名称全称', max_length=64, unique=True, verbose_name='部门全称')),
                ('emailgroup', models.EmailField(help_text='该部门的邮箱组', max_length=32, verbose_name='邮箱组')),
                ('address', models.CharField(help_text='部门的具体地址', max_length=64, unique=True, verbose_name='部门地址')),
                ('duty', models.CharField(default='7*24', help_text='部门值班类型,例如:5*8', max_length=16, verbose_name='值班类型')),
                ('tel', models.CharField(help_text='可填写多个联系方式', max_length=32, verbose_name='值班电话')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_idc_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('managers', models.ManyToManyField(blank=True, help_text='权限将比普通员工多一些', to=settings.AUTH_USER_MODEL, verbose_name='管理人员')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_idc_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '部门管理',
                'verbose_name_plural': '部门管理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('flag', models.SlugField(choices=[('', '---------')], help_text='该对象的标记类型,比如：设备', max_length=64, verbose_name='标记类型')),
                ('text', models.CharField(help_text='记录内容,模板中显示的内容', max_length=64, verbose_name='显示内容')),
                ('description', models.CharField(blank=True, help_text='记录内容的帮助信息/说明/注释', max_length=128, verbose_name='记录说明')),
                ('color', models.SlugField(blank=True, choices=[('red', '红色'), ('orange', '橙色'), ('yellow', '黄色'), ('green', '深绿色'), ('blue', '蓝色'), ('muted', '灰色'), ('black', '黑色'), ('aqua', '浅绿色'), ('gray', '浅灰色'), ('navy', '海军蓝'), ('teal', '水鸭色'), ('olive', '橄榄绿'), ('lime', '高亮绿'), ('fuchsia', '紫红色'), ('purple', '紫色'), ('maroon', '褐红色'), ('white', '白色'), ('light-blue', '暗蓝色')], help_text='该标签使用的颜色, 用于报表统计以及页面区分', max_length=12, null=True, verbose_name='颜色')),
                ('master', models.NullBooleanField(default=False, help_text='用于默认选中,比如:默认使用的设备类型是 糖化锅', verbose_name='默认使用')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_option_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_option_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_option_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_option_parent', to='idcops.Option', verbose_name='父级对象')),
            ],
            options={
                'verbose_name': '选项设置',
                'verbose_name_plural': '选项设置',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Pdu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(max_length=12, verbose_name='PDU名称')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_pdu_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': 'PDU信息',
                'verbose_name_plural': 'PDU信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='例如：GCN温度分析', max_length=32, verbose_name='AI模型名称')),
                ('cname', models.CharField(blank=True, help_text='仅用于区分多个设备AI模型名称', max_length=64, null=True, verbose_name='AI模型别名')),
                ('unitc', models.PositiveSmallIntegerField(default=0, help_text='填写模型实际数据输入数量,默认:0', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(180)], verbose_name='数据数量')),
                ('pduc', models.PositiveSmallIntegerField(default=2, help_text='填写A、B两路PDU数总和,默认:2个', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)], verbose_name='PDU数量')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('device', models.ForeignKey(help_text='该模型所使用的设备信息', on_delete=django.db.models.deletion.CASCADE, related_name='idcops_rack_device', to='idcops.Device', verbose_name='监控设备')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_rack_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('status', models.ForeignKey(blank=True, help_text='从选项中选取 模型状态', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_rack_status', to='idcops.Option', verbose_name='模型状态')),
                ('style', models.ForeignKey(blank=True, help_text='从选项中选取 模型类型', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_rack_style', to='idcops.Option', verbose_name='模型类型')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自选项', related_name='idcops_rack_tags', to='idcops.Option', verbose_name='模型标签')),
                ('user', models.ForeignKey(blank=True, help_text='该资源所属的员工信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_user', to=settings.AUTH_USER_MODEL, verbose_name='所属员工')),
            ],
            options={
                'verbose_name': '模型中心',
                'verbose_name_plural': '模型中心',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Rextend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('ups1', models.DecimalField(blank=True, decimal_places=1, default='0.0', help_text='填写数值', max_digits=3, verbose_name='A路电量')),
                ('ups2', models.DecimalField(blank=True, decimal_places=1, default='0.0', help_text='填写数值', max_digits=3, verbose_name='B路电量')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, default='22.0', help_text='设备温度', max_digits=3, verbose_name='设备温度')),
                ('humidity', models.DecimalField(blank=True, decimal_places=1, default='55.0', help_text='设备湿度', max_digits=3, verbose_name='设备湿度')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_rextend_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, help_text='该设备所属的模型信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_rack', to='idcops.Rack', verbose_name='所用模型')),
                ('user', models.ForeignKey(blank=True, help_text='该资源所属的员工信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_user', to=settings.AUTH_USER_MODEL, verbose_name='所属员工')),
            ],
            options={
                'verbose_name': '电量温湿度',
                'verbose_name_plural': '电量温湿度',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Syslog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('action_flag', models.CharField(max_length=32, verbose_name='action flag')),
                ('message', models.TextField(blank=True, verbose_name='change message')),
                ('object_desc', models.CharField(max_length=128, verbose_name='对象描述')),
                ('related_client', models.CharField(blank=True, max_length=128, null=True, verbose_name='关系客户')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_syslog_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_syslog_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_syslog_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_syslog_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': 'log entries',
                'verbose_name_plural': 'log entries',
                'ordering': ['-created'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '公开'), ('private', '保密')], help_text='成员信息权限', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否活动中', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(help_text='糖化锅温度', max_length=12, verbose_name='数据名称')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_onidc', to='idcops.Idc', verbose_name='所属部门')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_unit_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, help_text='该设备所属的模型信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_rack', to='idcops.Rack', verbose_name='所用模型')),
                ('user', models.ForeignKey(blank=True, help_text='该资源所属的员工信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_user', to=settings.AUTH_USER_MODEL, verbose_name='所属员工')),
            ],
            options={
                'verbose_name': '数据中心',
                'verbose_name_plural': '数据中心',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='pdu',
            name='rack',
            field=models.ForeignKey(blank=True, help_text='该设备所属的模型信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_rack', to='idcops.Rack', verbose_name='所用模型'),
        ),
        migrations.AddField(
            model_name='pdu',
            name='user',
            field=models.ForeignKey(blank=True, help_text='该资源所属的员工信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_user', to=settings.AUTH_USER_MODEL, verbose_name='所属员工'),
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ForeignKey(blank=True, help_text='分类, 从选项中选取', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_document_category', to='idcops.Option', verbose_name='文档分类'),
        ),
        migrations.AddField(
            model_name='document',
            name='creator',
            field=models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='document',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='document',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_document_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='document',
            name='status',
            field=models.ForeignKey(blank=True, help_text='从选项中选取', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_document_status', to='idcops.Option', verbose_name='文档状态'),
        ),
        migrations.AddField(
            model_name='document',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自选项', related_name='idcops_document_tags', to='idcops.Option', verbose_name='通用标签'),
        ),
        migrations.AddField(
            model_name='device',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='device',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_device_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='device',
            name='pdus',
            field=models.ManyToManyField(blank=True, help_text='设备所用机柜中的PDU接口信息', to='idcops.Pdu', verbose_name='PDU接口'),
        ),
        migrations.AddField(
            model_name='device',
            name='rack',
            field=models.ForeignKey(blank=True, help_text='该设备所属的模型信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_rack', to='idcops.Rack', verbose_name='所用模型'),
        ),
        migrations.AddField(
            model_name='device',
            name='style',
            field=models.ForeignKey(help_text='设备类型默认为糖化锅', on_delete=django.db.models.deletion.CASCADE, related_name='idcops_device_style', to='idcops.Option', verbose_name='设备类型'),
        ),
        migrations.AddField(
            model_name='device',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自选项', related_name='idcops_device_tags', to='idcops.Option', verbose_name='设备标签'),
        ),
        migrations.AddField(
            model_name='device',
            name='units',
            field=models.ManyToManyField(blank=True, help_text='设备中的数据信息', to='idcops.Unit', verbose_name='设备数据'),
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(help_text='该资源所属的员工信息', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_User', to=settings.AUTH_USER_MODEL, verbose_name='所属员工'),
        ),
        migrations.AddField(
            model_name='configure',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_configure_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='configure',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_configure_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='comment',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_comment_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='comment',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_comment_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='client',
            name='kf',
            field=models.ForeignKey(blank=True, help_text='从选项中选取', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_client_kf', to='idcops.Option', verbose_name='客户客服'),
        ),
        migrations.AddField(
            model_name='client',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_client_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='client',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_client_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='client',
            name='sales',
            field=models.ForeignKey(blank=True, help_text='从选项中选取', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_client_sales', to='idcops.Option', verbose_name='客户销售'),
        ),
        migrations.AddField(
            model_name='client',
            name='style',
            field=models.ForeignKey(help_text='从选项中选取', on_delete=django.db.models.deletion.CASCADE, related_name='idcops_client_style', to='idcops.Option', verbose_name='客户类型'),
        ),
        migrations.AddField(
            model_name='client',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自选项', related_name='idcops_client_tags', to='idcops.Option', verbose_name='通用标签'),
        ),
        migrations.AddField(
            model_name='user',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该成员所属的部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_user_onidc', to='idcops.Idc', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='user',
            name='slaveidc',
            field=models.ManyToManyField(blank=True, related_name='idcops_user_slaveidc', to='idcops.Idc', verbose_name='附属部门'),
        ),
        migrations.AddField(
            model_name='user',
            name='upper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_user_upper', to=settings.AUTH_USER_MODEL, verbose_name='直属上级'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Offline',
            fields=[
            ],
            options={
                'verbose_name': '下线设备',
                'verbose_name_plural': '下线设备',
                'abstract': False,
                'proxy': True,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'indexes': [],
            },
            bases=('idcops.device',),
        ),
        migrations.CreateModel(
            name='Online',
            fields=[
            ],
            options={
                'verbose_name': '在线设备',
                'verbose_name_plural': '在线设备',
                'abstract': False,
                'proxy': True,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'indexes': [],
            },
            bases=('idcops.device',),
        ),
        migrations.AlterUniqueTogether(
            name='unit',
            unique_together=set([('rack', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='rack',
            unique_together=set([('cname', 'device'), ('name', 'device')]),
        ),
        migrations.AlterUniqueTogether(
            name='pdu',
            unique_together=set([('rack', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='option',
            unique_together=set([('flag', 'text')]),
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together=set([('onidc', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='client',
            unique_together=set([('onidc', 'name')]),
        ),
    ]
